<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Wood's Linux Zen</title><link href="http://www.linuxzen.com/" rel="alternate"></link><link href="http://www.linuxzen.com/feeds/Vim,Python.atom.xml" rel="self"></link><id>http://www.linuxzen.com/</id><updated>2012-12-13T14:31:00+08:00</updated><entry><title>Vim打开Python源码自动添加#!行和编码行 升级版</title><link href="http://www.linuxzen.com/vimda-kai-pythonyuan-ma-zi-dong-tian-jia-xing-he-bian-ma-xing-sheng-ji-ban.html" rel="alternate"></link><updated>2012-12-13T14:31:00+08:00</updated><author><name>Wood</name></author><id>tag:www.linuxzen.com,2012-12-13:vimda-kai-pythonyuan-ma-zi-dong-tian-jia-xing-he-bian-ma-xing-sheng-ji-ban.html</id><summary type="html">&lt;p&gt;之前给大家分享过一个打开Python源代码时自动添加#!行和编码行来避免一些重复的工作,那个是因为需要大量编写时临时的解决方案,后来使用中会出现一些问题,比如查看别人源码时也会更改一些东西,从而造成git不必要的更新和手动删除的额外动作,所以又写了一个,只是在文件是新打开文件时或者空文件才自动添加的方法,同时再打开python源文件将这个方法绑定要F4上可以手动添加,并会判断是否有这两行,如果有则不执行动作,同时也添加了一些辅助性注释, 比如 作者/邮箱/创建日期和描述,代码实现如下:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="c"&gt;&amp;quot;Python 注释&lt;/span&gt;
&lt;span class="k"&gt;function&lt;/span&gt; InsertPythonComment&lt;span class="p"&gt;()&lt;/span&gt;
    exe &lt;span class="s1"&gt;&amp;#39;normal&amp;#39;&lt;/span&gt;.&lt;span class="m"&gt;1&lt;/span&gt;.&lt;span class="s1"&gt;&amp;#39;G&amp;#39;&lt;/span&gt;
    &lt;span class="k"&gt;let&lt;/span&gt; line &lt;span class="p"&gt;=&lt;/span&gt; getline&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;.&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; line &lt;span class="p"&gt;=~&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;^#!.*$&amp;#39;&lt;/span&gt; &lt;span class="p"&gt;||&lt;/span&gt; line &lt;span class="p"&gt;=~&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;^#.*coding:.*$&amp;#39;&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt;
    &lt;span class="k"&gt;endif&lt;/span&gt;
    normal O
    &lt;span class="k"&gt;call&lt;/span&gt; setline&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;.&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;#!/usr/bin/env python&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    normal &lt;span class="k"&gt;o&lt;/span&gt;
    &lt;span class="k"&gt;call&lt;/span&gt; setline&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;.&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;# -*- coding:utf-8 -*-&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    normal &lt;span class="k"&gt;o&lt;/span&gt;
    &lt;span class="k"&gt;call&lt;/span&gt; setline&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;.&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;#&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    normal &lt;span class="k"&gt;o&lt;/span&gt;
    &lt;span class="k"&gt;call&lt;/span&gt; setline&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;.&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;#   Author  :   &amp;#39;&lt;/span&gt;.g:python_author&lt;span class="p"&gt;)&lt;/span&gt;
    normal &lt;span class="k"&gt;o&lt;/span&gt;
    &lt;span class="k"&gt;call&lt;/span&gt; setline&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;.&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;#   E-mail  :   &amp;#39;&lt;/span&gt;.g:python_email&lt;span class="p"&gt;)&lt;/span&gt;
    normal &lt;span class="k"&gt;o&lt;/span&gt;
    &lt;span class="k"&gt;call&lt;/span&gt; setline&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;.&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;#   Date    :   &amp;#39;&lt;/span&gt;.strftime&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;%y/%m/%d %H:%M:%S&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
    normal &lt;span class="k"&gt;o&lt;/span&gt;
    &lt;span class="k"&gt;call&lt;/span&gt; setline&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;.&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;#   Desc    :   &amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    normal &lt;span class="k"&gt;o&lt;/span&gt;
    &lt;span class="k"&gt;call&lt;/span&gt; setline&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;.&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;#&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    normal &lt;span class="k"&gt;o&lt;/span&gt;
    &lt;span class="k"&gt;call&lt;/span&gt; &lt;span class="nb"&gt;cursor&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;7&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;17&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;endfunction&lt;/span&gt;
&lt;span class="k"&gt;function&lt;/span&gt; InsertCommentWhenOpen&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; a:lastline &lt;span class="p"&gt;==&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt; &amp;amp;&amp;amp; &lt;span class="p"&gt;!&lt;/span&gt;getline&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;.&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="k"&gt;call&lt;/span&gt; InsertPythonComment&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="k"&gt;end&lt;/span&gt;
endfunc
au &lt;span class="nb"&gt;FileType&lt;/span&gt; python :%&lt;span class="k"&gt;call&lt;/span&gt; InsertCommentWhenOpen&lt;span class="p"&gt;()&lt;/span&gt;
au &lt;span class="nb"&gt;FileType&lt;/span&gt; python map &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;F4&lt;span class="p"&gt;&amp;gt;&lt;/span&gt; :&lt;span class="k"&gt;call&lt;/span&gt; InsertPythonComment&lt;span class="p"&gt;()&amp;lt;&lt;/span&gt;&lt;span class="k"&gt;cr&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;将上面的代码放到你的vimrc中,同时在vimrc添加:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="k"&gt;let&lt;/span&gt; g:python_author &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;cold&amp;#39;&lt;/span&gt;               # 姓名
&lt;span class="k"&gt;let&lt;/span&gt; g:python_email  &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;wh_linux@126.com&amp;#39;&lt;/span&gt;   # 邮箱
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;这样在每次打开空的python源文件时就会添加这些注释信息,并可以在非空没有这些注释的情况下按F4添加,配置玩后,打开空的python源文件效果如下:
&lt;img alt="好看的statusline" src="/upload/VimPythonComment1.png" /&gt;&lt;/p&gt;</summary><category term="自动"></category><category term="编码信息"></category><category term="添加"></category><category term="vim"></category><category term="shbang line"></category><category term="python"></category></entry><entry><title>用Vim为Python源码自动添加#!行和编码行</title><link href="http://www.linuxzen.com/yong-vimwei-pythonyuan-ma-zi-dong-tian-jia-xing-he-bian-ma-xing.html" rel="alternate"></link><updated>2012-09-29T18:56:00+08:00</updated><author><name>Wood</name></author><id>tag:www.linuxzen.com,2012-09-29:yong-vimwei-pythonyuan-ma-zi-dong-tian-jia-xing-he-bian-ma-xing.html</id><summary type="html">&lt;p&gt;每次开始写Python打开文件第一件事就是写上&lt;code&gt;#!/usr/bin/env python和&lt;/code&gt;编码之类的东西,&lt;/p&gt;
&lt;p&gt;太多了,写烦就,写了一个打开Python自动填充的函数,将下面内容添加到&lt;code&gt;~/.vimrc&lt;/code&gt;下即可每次打开如果没有上述行则会自动填充:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="k"&gt;function&lt;/span&gt; InsertPythonHeader&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="k"&gt;let&lt;/span&gt; l1 &lt;span class="p"&gt;=&lt;/span&gt; getline&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;let&lt;/span&gt; l2 &lt;span class="p"&gt;=&lt;/span&gt; getline&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt;  &lt;span class="k"&gt;match&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;\#!/&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; l1&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;==&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;
        exec &lt;span class="m"&gt;1&lt;/span&gt;
        normal O
        &lt;span class="k"&gt;call&lt;/span&gt; setline&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;#!/usr/bin/env python&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;endif&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="k"&gt;match&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;\#&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; l2&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;==&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt; &amp;amp;&amp;amp; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;match&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;-&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; l2&lt;span class="p"&gt;)&lt;/span&gt;  &lt;span class="p"&gt;!=&lt;/span&gt; &lt;span class="m"&gt;2&lt;/span&gt; ¦¦ &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;match&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;code&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; l2&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;!=&lt;/span&gt; &lt;span class="m"&gt;2&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
        exec &lt;span class="m"&gt;2&lt;/span&gt;
        normal O
        &lt;span class="k"&gt;call&lt;/span&gt; setline&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;#-*- coding:utf-8 -*-&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;endif&lt;/span&gt;
&lt;span class="k"&gt;endfunction&lt;/span&gt;

au &lt;span class="nb"&gt;FileType&lt;/span&gt; python &lt;span class="k"&gt;call&lt;/span&gt; InsertPythonHeader&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;</summary><category term="自动"></category><category term="编码信息"></category><category term="添加"></category><category term="vim"></category><category term="shbang line"></category><category term="python"></category></entry></feed>